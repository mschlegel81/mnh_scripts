memoized
rotMatrix(angle)->[[cos(angle),sin(angle)],
                   [-sin(angle),cos(angle)]];

rotate(dir,angle)->(dir*rotMatrix(angle)).agg(+);

plottableTree(i:Int,p:NumericList(2),dir:NumericList(2),adjacency:Map,rotation:NumericList(2))->
  adjacency[i]
    .orElse([])
    .each(i_,begin
       dir_:=dir.rotate(rotation[ord((i and 1)=1)]);
       [p,p+dir_,[Nan,Nan]]|

       plottableTree(i_,p+dir_,dir_,adjacency,rotation);
     end,|);

plotColorful(depth>=0,i:Int,p:NumericList(2),dir:NumericList(2),adjacency:Map,rotation:NumericList(2))->
  adjacency[i]
    .orElse([])
    .each(i_,begin
       dir_:=dir.rotate(rotation[ord((i and 1)=1)]);
       plotColorful(depth+1,i_,p+dir_,dir_,adjacency,rotation);
       addPlot([p,p+dir_],'HSV'&(depth*0.01)&',1,0.8 '&(5*0.98^depth));

       //[p,p+dir_,[Nan,Nan]]|

       void;
     end,|);

f(1)->0;
f(i:Int)->(i and 1)=1
          ? i*3+1
          : i div 2;

begin
  kMax:=100000;
  A:=group([1..kMax],
       map([1..kMax],::f));
  setOptions(["axisStyleX"=>0,"axisStyleY"=>0].toMap);
  plotColorful(0,1,[0,0],[0,1],A,0.7*[-0.3,0.5]);


//  local addSample:={begin
//    local k:=f(kMax+=1);
//    A[k]|=kMax;
//    log('Now using samples up to ',kMax,'; A.size=',A.size);
//  end};
//  setOptions(["axisStyleX"=>0,"axisStyleY"=>0,"autoscaleX"=>false,"autoscaleY"=>false].toMap);
//  local Rot:=[0,0];
//  local dRot:=0.03*(0.5-random(2));
//  local globalExtend:=[0,0];
//
//  clearAnimation(true);
//  postDisplay;
//  local timePerFrame:=1;
//  local frameStarted:=scriptTime;
//
//  rangeGenerator(0)
//  .pMap((i)->plottableTree(1,[0,0],[0,1],A,[pi/6,-pi/6]*sin(Rot+i*dRot)))
//  .agg((p)->begin
//    globalExtend:=globalExtend*0.9+0.1*[p.getInner(0).abs.max,
//                                        p.getInner(1).abs.max];
//    setOptions(["x0"=>-globalExtend[0],
//                "x1"=> globalExtend[0],
//                "y0"=>-globalExtend[1],
//                "y1"=> globalExtend[1]].toMap);
//    p.plot;
//    addAnimationFrame;
//
//    (scriptTime-frameStarted)<0.01
//    ? addSample()
//    : void;
//    frameStarted:=scriptTime;
//  end);
//


end;

