decimalForm(rat:IntList(2))->begin
  enum:=rat[1];
  r:=divMod(rat[0],rat[1]);
  integerPart:=r[0]; r:=r[1]*10;
  decimals:=[];
  earlierRemainders:=[];
  while r not in earlierRemainders do begin
    earlierRemainders|=r;
    q:=divMod(r,enum);
    r:=q[1]*10;
    decimals|=q[0];
  end;
  h:=indexOf(earlierRemainders=r)[0];
  decimals:=h.isVoid
          ? [decimals,[]]
          : [decimals.head(h),decimals.tail(h)];
  decimals[1]==[0] ? decimals[1]:=[] : void;

  ['integerPart'    =>integerPart,
   'nonperiodicPart'=>decimals[0],
   'periodicPart'   =>decimals[1],
   'stringForm'     =>integerPart&(decimals.flatten.size>0
                                   ? '.' & decimals[0].join &
                                     (decimals[1].size>0 ? '('&decimals[1].join&')' : void)
                                   : void)].toMap;
end;

decimalForm([1,13]);

