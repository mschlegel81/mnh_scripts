checkThis(curvatures:NumericList(3))->
  curvatures.agg(+).sqr==sqr(curvatures).agg(+)*2;

printOnceASecond(...)->begin
  nextPrint:=-1;
save;
  if scriptTime>=nextPrint
  then print@... orElse nextPrint+=1;
end;

tripletGenerator->{begin
  i:= 0;
  j:= 0;
  k:=-1;
save;
  (k+=1) >= j
  ? begin
      k:=0;
      (j+=1) >= i
      ? begin i+=1; j:=0; end
      : void;
    end
  : void;
  printOnceASecond('Generated: ',[i,j,k]);
  [i,j,k];
end}.toIterableExpression;

allSquares(i:IntList)->sqrt(i).isIntList;

tripletGenerator().filter((p)->gcd@p=1)
                  //.filter(!::allSquares)
                  .pFilter(::checkThis)
                  .map({print($x,' - ',$x.sqrt)}).toList;

