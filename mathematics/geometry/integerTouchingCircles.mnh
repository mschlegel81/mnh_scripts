checkThis(curvatures:NumericList(3))->
  curvatures.agg(+).sqr==sqr(curvatures).agg(+)*2;

//rangeGenerator(1,100).pEach(i,rangeGenerator(1,i).each(j,rangeGenerator(1,j).each(k,checkThis([i,j,k]) ? [k,j,i] : void),|),|).sort;

printOnceASecond(...)->begin
  local nextPrint:=-1;
save;
  time>=nextPrint
  ? print@... orElse nextPrint+=1
  : void;
end;

tripletGenerator->{begin
  local i:= 0;
  local j:= 0;
  local k:=-1;
save;
  (k+=1) >= j
  ? begin
      k:=0;
      (j+=1) >= i
      ? begin i+=1; j:=0; end
      : void;
    end
  : void;
  printOnceASecond('Generated: ',[i,j,k]);
  [i,j,k];
end}.toIteratableExpression;

allSquares(i:IntList)->sqrt(i).isIntList;

tripletGenerator().filter({gcd@$p=1}).filter(!::allSquares).filter(::checkThis).map({print($x,' - ',$x.sqrt)});

