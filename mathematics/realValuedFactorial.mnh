factorial(i=0):=1;
factorial(i>0)->i*factorial(i-1);
factorial(x<0.0)->Nan;
factorial(x<1.0)->factorial(x+1)/(x+1);
factorial(x>2.0)->x*factorial(x-1);
factorial(x:Real)->1 + x * (-0.57371867451690817 + x * (0.9573869640700483 + x * (-0.77667195048309179 + x * (0.64641927083333328 + x * (-0.3787505661231884 + x * (0.16376811594202897 + x * (-0.045232299214975846 + x * (0.007281287741545894 -0.00048214824879227054*x))))))));
//Note: The real valued factorial was constructed as follows:
//USE multivariate_polynomials, rationals;
//
//// f(x) = x*f(x-1);
//// f(1) = f(0) = 1;
//
//// df/dx     =                                                        f(x-1) + x *  d/dx f(x-1)
//// d²f/dx²   = d/dx ( f(x-1) + x * d/dx f(x-1) )           = 2* d/dx  f(x-1) + x * d²/dx²f(x-1)
//// d³f/dx³   = d/dx ( 2*d/dx f(x-1) + x * d²/dx²f(x-1)  )  = 3*d²/dx² f(x-1) + x * d³/dx³f(x-1)
//P:=parsePoly('1+a*x+b*x²+c*x³+d*x^4+e*x^5+f*x^6+g*x^7+h*x^8+i*x^9')
//  .let('a',parsePoly('-1*i + -1*h + -1*g + -1*f + -1*e + -1*d + -1*c + -1*b'))
//  .let('b',parsePoly('1/2 + -255*i + -127*h + -63*g + -31*f + -15*e + -7*d + -3*c'))
//  .let('c',parsePoly('1/8 + -508*i + -441/2*h + -93*g + -75/2*f + -14*e + -9/2*d'))
//  .let('d',parsePoly('1/10 + -3006/5*i + -1101/5*h + -378/5*g + -117/5*f + -6*e'))
//  .let('e',parsePoly('1/80 + -6571/15*i + -657/5*h + -523/15*g + -112/15*f'))
//  .let('f',parsePoly('21/1664 + -5393/26*i + -2511/52*h + -463/52*g'))
//  .let('g',parsePoly('-5/6496 + -12918/203*i + -2095/203*h'))
//  .let('h',parsePoly('183/112256 + -10279/877*i'))
//  .let('i',-511/1059840);
//
//dP  :=  P.derivative('x');
//d2P := dP.derivative('x');
//d3P :=d2P.derivative('x');
//d4P :=d3P.derivative('x');
//d5P :=d4P.derivative('x');
//d6P :=d5P.derivative('x');
//d7P :=d6P.derivative('x');
//d8P :=d7P.derivative('x');
//
//(P.let('x',1)-1).findRoot;
//(P.let('x',2)-2).findRoot;
//(    P.let('x',1) + 2*  dP.let('x',1) -  dP.let('x',2)).findRoot;
//(2* dP.let('x',1) + 2* d2P.let('x',1) - d2P.let('x',2)).findRoot;
//(3*d2P.let('x',1) + 2* d3P.let('x',1) - d3P.let('x',2)).findRoot;
//(4*d3P.let('x',1) + 2* d4P.let('x',1) - d4P.let('x',2)).findRoot;
//(5*d4P.let('x',1) + 2* d5P.let('x',1) - d5P.let('x',2)).findRoot;
//(6*d5P.let('x',1) + 2* d6P.let('x',1) - d6P.let('x',2)).findRoot;
//(7*d6P.let('x',1) + 2* d7P.let('x',1) - d7P.let('x',2)).findRoot;
//(8*d7P.let('x',1) + 2* d8P.let('x',1) - d8P.let('x',2)).findRoot;
////
//P.toRealCoeff.horner;



