recamanGenerator->{begin
  local visited:=[].toSet;
  local i:= 0;
  local k:=-1;
save;
  k+=1;
  i-k>0 AND !((i-k) in visited) ? i:=i-k : i:=i+k;
  visited|=i;
  i;
end}.toGenerator;

halfCircle(startAt:Int,endAt:Int,up:Boolean)->begin
  local C:=cos([0..30]/30*pi);
  local S:=sin([0..30]/30*pi);
save;
  local radius:=(endAt-startAt)/2;
  local center:=(endAt+startAt)/2;
  transpose([center-C*radius,(up ? abs(radius) : -abs(radius))*S]);
end;

circleAnimation(generator:Iteratable)->begin
  local up:=false;
  local last:=0;
  local previous:=[];
  local row:=[[0,0]];
  ['autoscaleFactor'=>1.0,
   'autoscaleX'=>false,
   'autoscaleY'=>false,
   'axisStyleX'=>3,
   'axisStyleY'=>3,
   'fontsize'=>5,
   'logscaleX'=>false,
   'logscaleY'=>false,
   'preserveAspect'=>true].toMap.setOptions;
  generator.each(next,begin
    local frameStart:=time;
    next=last ? void : row|=halfCircle(last,next,up:=!up);
    previous|=next;
    ['x0'=>previous.min,
     'x1'=>previous.max,
     'y0'=>-abs(last-next)/2,
     'y1'=> abs(last-next)/2].toMap.setOptions;
    plot(row,'0.5 black l');
    addPlot(previous,previous*0,'red .');
    postDisplay;
    print(index,' ',next,' ',round((time-frameStart)*1000),'ms/frame');
    last:=next;
  end);
end;

circleAnimation(recamanGenerator);
