
WIDTH:=200;
SHIFT:=[1..WIDTH] mod WIDTH;
TFIHS:=[WIDTH-1..WIDTH*2-2] mod WIDTH;

forwardDifference (L:NumericList)->L[SHIFT]-L;

DIE_SPEED:=5;
DIE_THRESHOLD   :=0.2;
GROWTH_THRESHOLD:=  1;
GROWTH_SPEED:=0.1;

growthFactor:=
newLinearInterpolator([[0                   , -DIE_SPEED*DIE_THRESHOLD    ],
                       [DIE_THRESHOLD       ,                          0  ],
                       [GROWTH_THRESHOLD    ,                          0  ],
//                       [GROWTH_THRESHOLD+0.1, GROWTH_SPEED],
                       [GROWTH_THRESHOLD+  1, GROWTH_SPEED]]);

D(state)->begin
  local x:=state[0];
  local y:=state[1];
  local xGrad:=   4*forwardDifference(x);
  local yGrad:=-0.4*forwardDifference(y);


  local flow:=y* xGrad*ord(xGrad>0);         local dy:=flow[TFIHS]-flow;
        flow:=y*(xGrad*ord(xGrad<0))[TFIHS];       dy-=flow[SHIFT]-flow;
        flow:=x* yGrad*ord(yGrad>0);         local dx:=flow[TFIHS]-flow;
        flow:=x*(yGrad*ord(yGrad<0))[TFIHS];       dx-=flow[SHIFT]-flow;
  [dx + 0.01*(x-y)   ,dy + growthFactor(x)*y];



//  [dx,dy]; //transport only

//  [0.01*(x-y)   ,   growthFactor(x)*y]; //no transport

end;


tau(idx:Numeric)->integrate((t)->16/3*sin(t/2)^4,
                             0,idx/WIDTH*2*pi,1E-6);
tau(idx:NumericList)->idx.map(::tau);

USE rungeKutta;

INFINITE_RUN:=false;

begin
//  local state:=[2+0.1*random(WIDTH),
//                0.01+sin([0..WIDTH-1]/WIDTH*pi)^1000];



  local state:=[0.5+0.1*random(WIDTH),
                0.5+0.1*random(WIDTH)];
  state[1]:=state[0];

//  local state:=[0.5+0.4*sin(tau([0..WIDTH-1])),
//                0.5+0.4*cos(tau([0..WIDTH-1]))];
//  state[1]:=state[0].tail(WIDTH div 10)
//           |state[0].head(WIDTH div 10);

//  state[1]*=0;
//  state[1,WIDTH div 2]:=
//  state[0,WIDTH div 2]/2;



  local dt:=1;
  local step:=integrator( BOGACKI_SHAMPINE,::D,dt,1E-3);
  local stepFuture:={future({step($input).map((val)->val*ord(val>0))},[$x])};

  clearAnimation(INFINITE_RUN);
  setOptions(["x0"=>0,
              "x1"=>WIDTH+10,
              "y0"=>0,
              "y1"=>5,
              "fontsize"=>10,
              "preserveAspect"=>false,"autoscaleX"=>false,"autoscaleY"=>false,"logscaleX"=>false,"logscaleY"=>false,"autoscaleFactor"=>1,"axisStyleX"=>7,"axisStyleY"=>7].toMap);
  plot   (state[0]|state[0].head(10),'f blue');
  addPlot(state[1]|state[1].head(10),'f orange');
  addAnimationFrame;
  postDisplay;

  local startTime:=scriptTime;
  local nextState:=stepFuture(state);
  rangeGenerator(1,INFINITE_RUN ? void : 3000)
  .each(s,begin
    printf('%5d %8.4f %8.4f avg: %6.2ffps',s,state[0].agg(+),state[1].agg(+),s/(scriptTime-startTime));
    state:=nextState(); nextState:=stepFuture(state);
    plot   (state[0]|state[0].head(10),'f blue');
    addPlot(state[1]|state[1].head(10),'f orange');
    addAnimationFrame;
  end);

end;


