USE multivariate_polynomials,rationals,linAlg;

M:=begin
  local f:=parsePoly('a0+a1*x+a2*x²+a3*x³+a4*x^4');
  local F:=f.antiderivative('x');
  local df:=f.derivative('x');
  local Q0:= f.let('x',0)             ;
  local Q1:= f.let('x',1)             ;
  local Q2:=df.let('x',0)             ;
  local Q3:=df.let('x',1)             ;
  local Q4:= F.let('x',1)-F.let('x',0);

  print(Q0.toString,"\n",
        Q1.toString,"\n",
        Q2.toString,"\n",
        Q3.toString,"\n",
        Q4.toString);
  local powers:=('a'&[0..4]).map((b)->[[b,1]]);
  [Q0,Q1,Q2,Q3,Q4].map((p)->powers.map((pow)->p.isolate(pow).toString.interpret));
end.toSquareMatrix.invert;

M.toString.print;

begin
  local Q:=[parsePoly('C1'),
            parsePoly('C2'),
            parsePoly('(C2-C0)/2'),
            parsePoly('(C3-C1)/2'),
            parsePoly('(C1+C2)/2')];
  M.each(row,print('p'&index&'(C0,C1,C2,C3)->', row.each(i,Q[index]*i,+).toString,';'));
end;

p0(C0,C1,C2,C3)->C1                                ;
p1(C0,C1,C2,C3)->1/2*C2 - 1/2*C0                   ;
p2(C0,C1,C2,C3)->9/4*C0 - 15/4*C1 + 3/4*C2 + 3/4*C3;
p3(C0,C1,C2,C3)->-3*C0 + 4*C1 + C2 - 2*C3          ;
p4(C0,C1,C2,C3)->5/4*C0 - 5/4*C1 - 5/4*C2 + 5/4*C3 ;


funcAt(base:Expression(1),q0,q1,q2,q3,q4)->q0+base*(q1+base*(q2+base*(q3+base*q4)));

f(x0,C0,C1,C2,C3)->funcAt((x)->x-x0,
                              p0(C0,C1,C2,C3),
                              p1(C0,C1,C2,C3),
                              p2(C0,C1,C2,C3),
                              p3(C0,C1,C2,C3),
                              p4(C0,C1,C2,C3));
S:=newSplineInterpolator([-2..2].map((x)->[x,random]));
//S:=newLocalInterpolator ([-2..2].map((x)->[x,random]));
test(x)->x<-0.5 ? 0 : 1-x;

Y:=[-4..4].map((x)->x=>integrate(::test,x-0.5,x+0.5,100)).toMap;
plot(::test,-2.5,2.5,100,'red');
[-2..2].each(x,[x-0.5,Y[x]],[x+0.5,Y[x]]).addPlot('red 0.5');
[-2..2].each(x,[x,Y[x]]).addPlot('red . 0.75');
//[-2..2].each(x,[x,Y[x]]).newLocalInterpolator.addPlot(-2.5,2.5,100,'blue');
setOptions(["x0"=>-1,"x1"=>1,"y0"=>-1,"y1"=>1,"fontsize"=>10,"preserveAspect"=>false,"autoscaleX"=>true,"autoscaleY"=>true,"logscaleX"=>false,"logscaleY"=>false,"autoscaleFactor"=>1,"axisStyleX"=>7,"axisStyleY"=>7].toMap);

addPlot(f(-3, Y[-4],Y[-3],Y[-2],Y[-1]),-2.5, -2,100,' green');
addPlot(f(-2, Y[-3],Y[-2],Y[-1],Y[ 0]),  -2, -1,100,' green');
addPlot(f(-1, Y[-2],Y[-1],Y[ 0],Y[ 1]),  -1,  0,100,' green');
addPlot(f(-0, Y[-1],Y[ 0],Y[ 1],Y[ 2]),   0,  1,100,' green');
addPlot(f( 1, Y[ 0],Y[ 1],Y[ 2],Y[ 3]),   1,  2,100,' green');
addPlot(f( 2, Y[ 1],Y[ 2],Y[ 3],Y[ 4]),   2,2.5,100,' green');

//addPlot(f( 0, Y[-1],Y[ 0],Y[ 1],Y[ 2]),-1/2, 1/2,100,' red');
//addPlot(f( 1, Y[ 0],Y[ 1],Y[ 2],Y[ 3]), 0.5, 1.5,100,' red');
//addPlot(f( 2, Y[ 1],Y[ 2],Y[ 3],Y[ 4]), 1.5, 2.5,100,' red');
//
//
//
