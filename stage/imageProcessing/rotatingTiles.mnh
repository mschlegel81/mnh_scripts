#!C:\bin\mnh.exe -GUI
GEOM_DETAIL:=20;
basicTile:=map([0..GEOM_DETAIL]/GEOM_DETAIL*pi/2,{-0.5+0.6*[cos($x),sin($x)]})|
           map([GEOM_DETAIL..0]/GEOM_DETAIL*pi/2,{-0.5+0.4*[cos($x),sin($x)]})|[[Nan,Nan]]|
           map([0..GEOM_DETAIL]/GEOM_DETAIL*pi/2,{ 0.5-0.6*[cos($x),sin($x)]})|
           map([GEOM_DETAIL..0]/GEOM_DETAIL*pi/2,{ 0.5-0.4*[cos($x),sin($x)]})|[[Nan,Nan]];

memoized rotatedBasicTile(angle)->begin
  local e0:=[cos(angle),sin(angle)];
  local e1:=[-e0[1],e0[0]];
  basicTile.each(p,p[0]*e0+
                   p[1]*e1).transpose;
end;

plottableTile(i,j,rotation)->begin
  local bt:=rotatedBasicTile(round(rotation,1)*pi/2);
  [bt[0]+i,bt[1]+j].transpose;
end;

COORDINATES:=[0..30].cross([0..15]);

normalizedSys(L:NumericList)->L.map(::round) and 1;

DEFAULT_SYS:=[
  COORDINATES.map({($x and 1).agg(xor)}) ,
  COORDINATES.map({1-(($x).agg(+) or 1)}),
  COORDINATES.map({  (($x).agg(+) or 1)}),
  COORDINATES.map({$x[0]})               ,
  COORDINATES.map({$x[1]})               ,
  COORDINATES.map({($x[1]*$x[0])})       ,
  COORDINATES.map({(($x[1]) div 2  xor ($x[0] div 2))}),
  COORDINATES.map({(($x[1]) div 2  xor ($x[0] ))})     ,
  COORDINATES.map({(($x[1]) div 3  xor ($x[0] div 2))})].map(::normalizedSys);

randomSys->
  random<0.5
  ? intRandom(2,COORDINATES.size)
  : DEFAULT_SYS[DEFAULT_SYS.size.intRandom];

main->begin
  clearAnimation(true);
  local s0:=randomSys;
  local s1:=randomSys;
  setOptions(["axisStyleX"=>0,"axisStyleY"=>0,'strictInput'=>true,
              'autoscaleX'=>false,
              'autoscaleY'=>false,
              'x0'=>0.0,
              'x1'=>COORDINATES.getInner(0).max,
              'y0'=>0,
              'y1'=>COORDINATES.getInner(1).max].toMap);
  local quitRequested:=false;
  while(!(quitRequested:=quitRequested OR plotClosed),
  begin
    s0:=s1;
    local delta:=[];
    while(s0==s1 OR s0==1-s1,begin
      s1:=randomSys;
      delta:=(s0 xor s1)*(1-2*intRandom(2,COORDINATES.size));
    end);
    s0.each(r,plottableTile(COORDINATES[index,0],COORDINATES[index,1],r),|).plot('black 0 fs polygon');
    [0..9].map(::addAnimationFrame);

    s0.each(r,delta[index]=0
              ? plottableTile(COORDINATES[index,0],COORDINATES[index,1],r)
              : void,|).plot('black 0 fs polygon');
    local lapse:=abs(delta)*round(9*random(COORDINATES.size),1);
    [0..99].pEach(t,
      delta.each(d,
        d=0 ? void
            : plottableTile(COORDINATES[index,0],COORDINATES[index,1],
                           s0[index]+d*min(1,max(0,(t*0.1-lapse[index])))),|),
      aggregator({begin
        (quitRequested:=quitRequested OR plotClosed) ? void : begin
          $frame.addPlot('black 0 fs polygon');
          addAnimationFrame;
          removePlot(1);
          postDisplay;
        end;
      end}));
  end);
  clearAnimation;
end;
