circlePoint(t)->[cos(t),sin(t)];
DEPTH:=10;
MAX_AMPLITUDE:=0.5;

amplitude(y)->MAX_AMPLITUDE*(y/DEPTH);

wavePoint(baseX,baseY,phase)->begin
  local a:=baseX-phase;
  a:=[cos(a),sin(a)]*amplitude(baseY);
  a+[baseX,baseY];
end;

wavePoint(phase)->{wavePoint($x[0],$x[1],phase)};

POINTS_Y:=21;
POINTS_X:=2*POINTS_Y-1;
NO_POINT_IDX:=POINTS_X*POINTS_Y;

mesh(p:List)->begin
  local
  MESH_IDX:=[0..POINTS_X-1].each(i,
            [0..POINTS_Y-1]+i*POINTS_Y,NO_POINT_IDX,|)|
            [0..POINTS_Y-1].each(j,
            [0..POINTS_X-1]*POINTS_Y+j,NO_POINT_IDX,|);
save;
  local P:=p|[[Nan,Nan]];
  P[MESH_IDX];
end;

asGrid->begin
  clearAnimation;
  setOptions(["preserveAspect"=>true,"x0"=>MAX_AMPLITUDE,"x1"=>20-MAX_AMPLITUDE,"y0"=>0,"y1"=>DEPTH+MAX_AMPLITUDE,"autoscaleX"=>false,"autoscaleY"=>false,"axisStyleX"=>0,"axisStyleY"=>0].toMap);
  local P:=[0..POINTS_X-1].cross([0..POINTS_Y-1])/(POINTS_Y-1)*10;
  pMap(toIteratableExpression([0..49]/50*2*pi),{P.map(wavePoint($t)).mesh})
  .each(frameData,plot(frameData,'c'),addAnimationFrame);
end;

inLines->
begin
  setOptions(["x0"=>1,"x1"=>19,"y0"=>-10,"y1"=>1,"autoscaleX"=>false,"autoscaleY"=>false,"axisStyleX"=>6,"axisStyleY"=>6].toMap);
  clearAnimation;
  ([0..-49]/50*2*pi).each(phaseShift,begin
    local d:=0;
    local a:=1;
    ([0..100]/5).map({a*circlePoint($x+phaseShift)+[$x,d]}).plot('black 2');
    ([1..7]*2.5).map({a*circlePoint($x+phaseShift)+[$x,d]}).addPlot('red .');
    ([1..7]*2.5).each(cx,[cx-a,d-a],[cx+a,d+a]).addPlot('red ellipse 0.5');
    d:=-2.5;
    a:=0.75;
    ([0..100]/5).map({a*circlePoint($x+phaseShift)+[$x,d]}).addPlot('black 1.5');
    ([1..7]*2.5).map({a*circlePoint($x+phaseShift)+[$x,d]}).addPlot('red .');
    ([1..7]*2.5).each(cx,[cx-a,d-a],[cx+a,d+a]).addPlot('red ellipse 0.5');
    d:=-5;
    a:=0.5;
    ([0..100]/5).map({a*circlePoint($x+phaseShift)+[$x,d]}).addPlot('black 1');
    ([1..7]*2.5).map({a*circlePoint($x+phaseShift)+[$x,d]}).addPlot('red .');
    ([1..7]*2.5).each(cx,[cx-a,d-a],[cx+a,d+a]).addPlot('red ellipse 0.5');

    d:=-7.5;
    a:=0.25;
    ([0..100]/5).map({a*circlePoint($x+phaseShift)+[$x,d]}).addPlot('black 1');
    ([1..7]*2.5).map({a*circlePoint($x+phaseShift)+[$x,d]}).addPlot('red .');
    ([1..7]*2.5).each(cx,[cx-a,d-a],[cx+a,d+a]).addPlot('red ellipse 0.5');

    ([1..7]*2.5).each(x,circlePoint(x+phaseShift)+[x,0],[x,-10],[Nan,Nan]).addPlot('red 0.5');
    addAnimationFrame;
  end);
  display;
end;

triangleArea(a,b,c)->begin
  local ba:=b-a;
  local ca:=c-a;
  ba[0]*ca[1]-ca[0]*ba[1];
end;

cellSize(t)->begin
  local h:=0.00001;
  local A:=wavePoint( h/2,DEPTH  ,t);
  local B:=wavePoint(-h/2,DEPTH  ,t);
  local C:=wavePoint(-h/2,DEPTH-h,t);
  local D:=wavePoint( h/2,DEPTH-h,t);
  (triangleArea(A,B,C)+triangleArea(A,C,D))/(2*hÂ²);
end;



setOptions(["preserveAspect"=>false].toMap);
plot(::cellSize,0,2*pi,1000);
//
//asGrid;
