fak(i>0)->[1..i].agg(*);
fak(i<=0)->1;

gamma(z)->integrate((t)->t^(z-1)*exp(-t),0  ,1   ,1000000)+
          integrate((t)->t^(z-1)*exp(-t),1  ,1E20,1000000);

pMap(1+[0..10]/10,(x)->[x,x-1,gamma(x)]);

halt;






f(x:Real)->begin
  local i:=floor(x);
  i>0 ? ([1..i]+(x-i)).agg(*)*gamma((x-i)+1)
      :                       gamma((x-i)+1);
end;

GAMMA_SPLINE:=map([0..100]/100,(y)->[y,gamma(y+2)/(y+1)]).newSplineInterpolator;
g(x<0.0)->GAMMA_SPLINE()(x-floor(x))/(x+1);
g(x<1.0)->GAMMA_SPLINE()(x);
g(x:Numeric)-> (x-[0..floor(x)-1]).agg(*)*GAMMA_SPLINE(x-floor(x));
g(x:NumericList)->x.pMap(::g);

setOptions(["x0"=>-1,"x1"=>1,"y0"=>-1,"y1"=>1,"fontsize"=>10,"preserveAspect"=>false,"autoscaleX"=>true,"autoscaleY"=>true,"logscaleX"=>false,"logscaleY"=>false,"autoscaleFactor"=>1,"axisStyleX"=>7,"axisStyleY"=>7].toMap);



time({plot((x)->gamma(x+2)/(x+1)     ,1,2,1000)});
time({addPlot(::g                    ,1,2,1000)});

//          [0..3].map((i)->[i,fak(i)]).plot('l i');
//addPlot(::f,0,3,1000);
//addPlot((x)->gamma(x+1),0,3,1000);
