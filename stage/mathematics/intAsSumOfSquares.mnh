twoSquares(prime:Int)->begin
    local s:=[1..sqrt(prime).floor]^2;
    s:=intersect(prime-s,s).toList.head;
    [s,prime div s];
  end;

threeSquares(n>0)->
  n mod 4=0 ? 2*threeSquares(n div 4) :
  n mod 8=7 ? 0 :
  n mod 8=3 ?
  begin
    local p:=0;
    local x:=n;
    while(!(isPrime(p) AND (p-1) mod 4=0),begin
      x:=intRandom(floor(n));
      p:=(n-x^2) div 2;
    end);
    local yz:=twoSquares(p);
    [x,yz.agg(+),yz.agg(-)];
  end :
  n.sqrt.round.sqr==n ? [sqrt(n).round] :
  begin
    local p:=0;
    local x:=n;
    while(!(isPrime(p) AND (p-1) mod 4=0),begin
      x:=intRandom(floor(n));
      p:=n-x^2;
    end);
    local yz:=twoSquares(p);
    x|yz;
  end;

(2^primes(30)-1).filter(::isPrime);
