
Epsilon:=1E-3;
SP:=[1..ceil(1/Epsilon)-1]/ceil(1/Epsilon);


//findFixedPoints(f:Expression(1))->begin
//  local G:=f-{$x};
//  local evaluated:=[SP,f(SP)-SP].transpose;
//  [evaluated.leading,evaluated.tail]
//  .transpose
//  .filter((pair)->sign(pair[0,1])<>sign(pair[1,1]))
//  .map((pair)->abs((pair[1,1]+pair[1,0]-pair[0,1]-pair[0,0])/(pair[1,0]-pair[0,0]))<1 ? pair.getInner(0) : void)
//  .map((interval)->regulaFalsi(G,interval[0],interval[1],smallerEpsilon,smallerEpsilon));
//end;

lep(a)->begin
  local x:=SP;
  local y:=SP;

  local fixedPoints:=
  [1..20].each(step,begin
    y:=y*(1-y)*a;
    local d:=[y,x,sign(y-x)].transpose;
    [d.leading,d.tail].transpose
    .filter((trip)->trip[0,2]<>trip[1,2]) //filter by sign change
    .filter((trip)->abs((trip[1,0]-trip[0,0])/(trip[1,1]-trip[0,1]))<=1) //filter by slope
    .each(trip,begin
       local y0:=trip[0,0]-(local x0:=trip[0,1]);
       local y1:=trip[1,0]-(local x1:=trip[1,1]);
       x0+y0*(x1-x0)/(y0-y1);
     end);
  end,aggregator((earlierPoints,newPoints)->begin
    earlierPoints.size=0
    ? newPoints
    : earlierPoints | newPoints.filter((np)->abs(np-earlierPoints).min>Epsilon);
  end)).sort;

  fixedPoints.size=0
  ? begin
      [1..1000].each(step,begin
        y:=y*(1-y)*a;
        void;
      end);
      y:=y.sort;

      local currentCluster:=[y.head];

      y.tail.each(p,p-currentCluster.trailing<=Epsilon
                    ? begin
                        currentCluster|=p;
                        void;
                      end
                    : begin
                        fixedPoints|=currentCluster.agg(+)/currentCluster.size;
                        currentCluster:=[p];
                        void;
                      end);
    end
  : void;
  fixedPoints;
end;

begin
  local toPlot:=[];
  local prevLayer:=2.5=>lep(2.5);

  local lastPlot:=scriptTime;
  setOptions(["x0"=>-1,"x1"=>1,"y0"=>-1,"y1"=>1,"fontsize"=>10,"preserveAspect"=>false,"autoscaleX"=>true,"autoscaleY"=>true,"logscaleX"=>false,"logscaleY"=>false,"autoscaleFactor"=>1,"axisStyleX"=>7,"axisStyleY"=>7].toMap);
  rangeGenerator(2501,4000)./(1000)
  .pMap((a)->a=>lep(a))
  //.map((a)->a=>random(100))
  .each(newLayer,begin
    note(newLayer[0]);
    local prevY:=prevLayer[1];
    local newY :=newLayer [1];
    newY.each(y,begin
      local connY:=prevY[argMin(abs(prevY-y))];
      toPlot|=[[prevLayer[0],connY],[newLayer[0],y],[Nan,Nan]];
    end);

    prevLayer:=newLayer;

    scriptTime>lastPlot+1
    ? begin
        plot(toPlot);
        display;
        lastPlot:=scriptTime;
      end
    : void;
  end);
  plot(toPlot);
  display;

//  ([2501..3000]/1000).each(a,begin
//
//
//
//  end);

end;






