T :=[-4,-3,-2,-1,0,1,2,3,4];
P :=[ 1, 0, 0, 0,1,0,0,0,1];
#     0  1  2  3 4 5 6 7 8

N(i,0,u)->ord((T[i] orElse Inf) <= u < (T[i+1] orElse -Inf));
N(i,p,u)->(u-T[i])/(T[i+p]-T[i])*N(i,p-1,u)+(T[i+p+1]-u)/(T[i+p+1]-T[i+1])*N(i+1,p-1,u);

curry f(i,u)->begin
  P[i  +2]*N(i  ,3,u)+
  P[i+1+2]*N(i+1,3,u)+
  P[i+2+2]*N(i+2,3,u)+
  P[i+3+2]*N(i+3,3,u);
end;

curry schlegel(u)->begin
  local i:=indexOf(T<=u).trailing;
  i==[] ? i:=0 : i:=max(0,i-1);

  local A3:=(u-T[i+1])/(T[i+2]-T[i+1]);
  local W2:=[(1-A3),
                A3 ];
  local A2:=[(u-T[i  ])/(T[i+2]-T[i  ]),
             (u-T[i+1])/(T[i+3]-T[i+1])];
  local W1:=[            (1-A2[0])*W2[0],
             A2[0]*W2[0]+(1-A2[1])*W2[1],
             A2[1]*W2[1]                ];
  //T[i-1]=2*T[i]-T[i+1]
  //(u-2*T[i]-T[i+1])/(T[i+2]-2*T[i]-T[i+1])

  local A1:=[i<=0 ? (u-2*T[i]-T[i+1])/(T[i+2]-2*T[i]-T[i+1]) :
             (u-T[i-1])/(T[i+2]-T[i-1]),
             (u-T[i  ])/(T[i+3]-T[i  ]),
             (u-T[i+1])/(T[i+4]-T[i+1])];
  local W0:=[            (1-A1[0])*W1[0],
             A1[0]*W1[0]+(1-A1[1])*W1[1],
             A1[1]*W1[1]+(1-A1[2])*W1[2],
             A1[2]*W1[2]               ];
  P[i  ]*W0[0]+
  P[i+1]*W0[1]+
  P[i+2]*W0[2]+
  P[i+3]*W0[3];
end;

schlegel(4);

plot(::schlegel,-6,6,1000);
halt;




//                N[i,3]          N[i+1,3]       N[i+2,3]      N[i+3,3]
//          N[i,2]        N[i+1,2]        N[i+2,2]      N[i+3,2]      N[i+4,2]
//     N[i,1]     N[i+1,1]        N[i+2,1]       N[i+3,1]      N[i+4,1]      N[i+5,1]
//N[i,0]    N[i+1,0]      N[i+2,0]        N[i+3,0]      N[i+4,0]      N[i+5,0]      N[i+6,0]

curry g(i,u)->begin
  local n:=[0..6].each(j,ord((T[i+j] orElse Inf)<=u<(T[i+j+1] orElse -Inf)));//  ord(T_[i+[0..6]]<=u<T_[i+[1..7]]);
  [1..3].each(p,begin
    local w0:=[0..6-p].each(j,(u         -T [i+j])/(T[i+p  +j]-T[i  +j]));
    local w1:=[0..6-p].each(j,(T[i+p+1+j]-      u)/(T[i+p+1+j]-T[i+1+j]));
    n:=n.leading*w0+n.tail*w1;
  end);
  P[i  +1]*n[0]+
  P[i+1+1]*n[1]+
  P[i+2+1]*n[2]+
  P[i+3+1]*n[3];
end;



//deBoor(u)->begin
//  local k:=indexOf(T<=u).trailing;
//  k==[] ? k:=0 : k-=1;
//  local Q:=[P.tail(k).head(4),[],[],[]];
//  [1..3].each(l,[0..3-l].each(j,
//  begin
//    local alpha:=(u-       T[k+j])/
//                 (T[k+j+l]-T[k+j]);
//    note('l=',l,' a=', alpha,' ',T[k+j+[0,l]]);
//    Q[l,j]:=Q[l-1,j  ]*(1-alpha)+
//            Q[l-1,j+1]*   alpha ;
//
//    //Q[l,j]:=(u         -T[j+k  ])/
//    //        (T[j+k+l  ]-T[j+k  ])*Q[l-1,j]
//    //       +(T[j+k+l+1]-       u)/
//    //        (T[j+k+l+1]-T[j+k+1])*Q[l-1,j+1];
//  end));
//
//  Q[3,0];
//  Q;
//end;
//
//deBoor(0.5);
//
//[N(3,0,0.5)*P[3], N(4,0,0.5)*P[4], N(5,0,0.5)*P[5], N(6,0,0.5)*P[6]];
//
//[N(3,1,0.5)*P[3]+
// N(4,1,0.5)*P[4],
//
// N(4,1,0.5)*P[4]+
// N(5,1,0.5)*P[5],
//
// N(5,1,0.5)*P[5]+
// N(6,1,0.5)*P[6]
//
// ];


//[f2a(1,0.5),f2b(1,0.5)];
//f(1,0.5);
//P[2  +2-1]*N(2  -1,2,0.5)+
//P[2+1+2-1]*N(2+1-1,2,0.5)+
//P[2+2+2-1]*N(2+2-1,2,0.5);
//
//P[2  +2]*N(2  ,2,0.5)+
//P[2+1+2]*N(2+1,2,0.5)+
//P[2+2+2]*N(2+2,2,0.5);
//
//P[2  +2]*N(2  ,3,0.5)+
//P[2+1+2]*N(2+1,3,0.5)+
//P[2+2+2]*N(2+2,3,0.5)+
//P[2+3+2]*N(2+3,3,0.5);



//plot(::deBoor,-2,2,1000);
addPlot(f(1),-2,2,1000);
addPlot(::schlegel,-2,2,1000);
   halt;

// N[i,3]        N[i+1,3]       N[i+2,3]      N[i+3,3]
////       N[i+1,2]        N[i+2,2]      N[i+3,2]
////               N[i+2,1]       N[i+3,1]
////                       N[i+3,0]
//curry h(u)->begin
//  local i:=floor(u)-2;
//  local n:=ord((T_[i] orElse Inf)<=u<(T_[i+1] orElse -Inf));
//  n:=[n*(T_[i+1]-u)/(T_[i+1]-T_[i]),
//      n*(u -T_[i]) /(T_[i+1]-T_[i])];
//
//  local w0:=[1..2].each(j,(u        -T_[i+j-2])/(T_[i  +j]-T_[i+j-2]));
//  local w1:=[0..1].each(j,(T_[i+1+j]-        u)/(T_[i+1+j]-T_[i+j-1]));
//  n:=(n*w1|0)+(0|n*w0);
//  w0:=[0..2].each(j,(u        -T_[i+j-2])/(T_[i+1+j]-T_[i+j-2]));
//  w1:=[0..1].each(j,(T_[i+2+j]-        u)/(T_[i+2+j]-T_[i-1+j]));
//
//
//  n:=(n*w0|0)+(n.tail*w1|0|0);
//
//  P[i  ]*n[0]+
//  P[i+1]*n[1]+
//  P[i+2]*n[2]+
//  P[i+3]*n[3];
//end;



//plot(g(2),-2,4,1000);
////addPlot(f(1),-0.5,0,100);
//addPlot(f(2),-1,3  ,100);
//addPlot(g(2),-1,3,100);
//addPlot(T_,P,'b');


//addPlot(f(3), 1,1.5,100);

//addPlot(f(3),-1,0,100);
//addPlot(f(5),1,2,100);
//addPlot(f(6),2,3,100);
//addPlot(f(2),-2,-1,100);

//plot   (::f,0,1,100);
//addPlot(::g,1,2,100);
//addPlot(::h,-1,0,100);

//g(tau)->
//begin
//  local T:=[-1,0,1,2];
//  local t:=tau-T[0];
//  local Q:=[[0,0,1,0],
//            [0,0,0],
//            [0,0],
//            [0]];
//  [1..3].each(l,
//  [0..3-l].each(j,
//  begin
//    local alpha:=(t-T[j])/(T[j+l]-T[j]);
//    Q[l,j]:=Q[l-1,j]*(1-alpha)+
//            Q[l-1,j+1]*alpha;
//  end));
//  Q[3,0];
//end;



//plot   (::f,0,3,100);
//addPlot(::g,-1,2,100);

