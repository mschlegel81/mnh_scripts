@SuppressUnusedParameterWarning
//*Particle, interpreted as [[px,py],[vx,vy],mass]
ducktype Particle(L:List(3))->L[0].isNumericList(2) AND
                              L[1].isNumericList(2) AND
                              0<L[2]<Inf;
ducktype ParticleList(L:List)->L.each(p,p.isParticle,AND);

private dF(sys:ParticleList)->begin
  local f:=sys.each(particle,
    [particle[1], // dx/dt = v
     [0,0],       // dv/dt = 0 (initially)
     0]);         // d(mass)/dt = 0
  sys.tail.pEach(P,begin
    local pIdx:=index+1;
    sys.head(pIdx).pEach(Q, begin
      local df:=Q[0]-P[0];
      df*=sqr(df).agg(+)^(-3/2);
      [[pIdx , df*Q[2]],
       [index,-df*P[2]]];
    end,|);
  end,|).each(d,f[d[0],1]+=d[1]);
  f;
end;

//private step:=integrator(RK32, ::dF,0.001);
//private step:=integrator(CASH_KARP, ::dF,0.001,1E-4);

private drawSys(sys:ParticleList)->sys.getInner(0).plot('.');

private randomInUnitCircle->begin
  local result:=[2,0];
  while(result.sqr.agg(+)>1,result:=random(2)*2-1);
  result;
end;

private randomSys(size)->
  [1..size].each(k,
    [randomInUnitCircle,randomInUnitCircle*1E-6,random].toParticle).toParticleList;

USE plotUtil;

begin
  clearAnimation;
  local sys:=randomSys(50);
  setPlotRangeManually(-1.5,1.5,-1.5,1.5);
  setPlotPreserveAspect(true);
  while(true,begin
    sys.drawSys; addAnimationFrame; postDisplay;
    sys+=0.001*dF(sys);
  end);
end;
