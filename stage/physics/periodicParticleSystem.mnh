//q(t)->sqr(sqr(t/2500))*4*pi;
//
//setOptions(["x0"=>-1,"x1"=>1,"y0"=>-1,"y1"=>1,"fontsize"=>10,"preserveAspect"=>false,"autoscaleX"=>true,"autoscaleY"=>true,"logscaleX"=>false,"logscaleY"=>false,"autoscaleFactor"=>1,"axisStyleX"=>7,"axisStyleY"=>7].toMap);
//plot   ((t)->q(t).cos,0,5000,1000);
//addPlot((t)->q(t).sin,0,5000,1000);
//

//PDXY:=cross([-32,0,32],[-32,0,32]);
PDXY:=[[0,0]];

force(p0:NumericList(2),p1:NumericList(2))->PDXY.each(d,begin
  local dx:=p1+d-p0;
  (local f:=euklideanNorm(dx))<30
  ? begin
     10*dx/f*-sin(f*2*pi/30);
     // (max(0,f-abs(dx[0]))
     // -max(0,f-abs(dx[1])))*(0.3/f²)*dx;
   //  -dx/f³;
//      max(0,f-abs(dx[0]))*(0.3/f²)*dx;
//      (sin(f*pi/10*1.5))/f*dx;
    end
  : [0,0];
end,+);

acceleration(points)->begin
  points.pEach(p,begin
    local skip:=index;
    points.each(q,index=skip ? void : force(p,q),+) orElse [0,0];
  end);
end;

accelerationByCenter(points)->
  points.each(p,force(p,[16,16]));


USE rungeKutta;

begin
  local dt:=0.1;
  local P:=[0..1].map(()->32*random(2));
//  local P:=[0..49].map((i)->i*2*pi/50).map((a)->[cos(a),sin(a)]*9.14+16);
//  local P:=(random(100)*2*pi).map((a)->[cos(a),sin(a)]*9.14+16);
  P:=[P,P.map(()->0.01*(0.5-random(2)))];
   setOptions(["x0"=>0,"x1"=>32,
               "y0"=>0,"y1"=>32,"preserveAspect"=>true,
               "autoscaleX"=>false,"autoscaleY"=>false,"logscaleX"=>false,"logscaleY"=>false,"autoscaleFactor"=>1,"axisStyleX"=>7,"axisStyleY"=>7].toMap);
  plot(P[0],'.'); addAnimationFrame;


//  local step:=integrator(BOGACKI_SHAMPINE,(Q)->[Q[1],acceleration(Q[0])],dt,1E-2);
//  local step:=integrator(RK2(0.5),(Q)->[Q[1],acceleration(Q[0])],dt);
  [1..local stepsTotal:=5000].each(s,begin
    (s mod 100=0) ? begin
      local newP:=32*random(2);//P[0].agg(+)/P[0].size;
      local newV:=0*(0.5-random(2));
      P[0]|=[newP];
      P[1]|=[newV];
    end : void;

//    P:=step(P);
    P[1]+=dt*acceleration(P[0]);
    P[0]+=dt*P[1];

    local x:=P[0]*(1/32);

    P[0]:=32*(x-floor(x));
//    s<200 ? P[1]*=1-(s/200) : void;
    P[1]*=0.95;
    plot(P[0],'.'); addAnimationFrame;

    printDirect("\r",format("%s (%3.2f%%)",s,100*s/stepsTotal));

  end);

end;

