datastore randomSites:=[];
datastore frequencies:=[].toMap;
TIMEOUT:=120;
DEFAULT_PREV:=#32;

private analyzeString(s:String)->begin
  local prev:=DEFAULT_PREV;
  frequencies:=frequencies.mergeMaps(s.bytes.each(byte,[prev,prev:=byte]).elementFrequency,::+);
  print('Updated frequencies map to ',frequencies.size,' entries; total=',frequencies.getInner(1).agg(+),'; max=',frequencies.getInner(1).max);
  void;
end;

main->while(time<TIMEOUT,begin
  local data:=httpGet('https://en.wikipedia.org/wiki/Special:Random')['body'];
  print('Fetched ',data.byteLength,' bytes; ',max(TIMEOUT-time,0).round(2),'s remaining');
  analyzeString(data);
  randomSites|=data;
end);

//begin
//  local f:=frequencies.toList.map(::flatten).group(0)
//  .each(g,[g[0,0],g.map(::tail).toMap]).toMap;
//  f.showVariable;
//end;

frequencies.map({$x[0].ord|$x[1]}).sort(2);
