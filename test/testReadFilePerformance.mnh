tempFileName->begin
  while(true,begin
    local name:=format('%s%s',myPath,intRandom(2^32));
    fileExists(name)
    ? void
    : return name;
  end);
end;

SIZE_IN_KB:=10*1024; //=10 MB
oneKbRandom->format('%x',intRandom(2^4096));
randomDataGenerator->rangeGenerator(1,SIZE_IN_KB).map(::oneKbRandom);

writeTestFile(filename)->filename.writeFileLines(randomDataGenerator.toList);

touchTestFile(filename:String)->filename.writeFileLines([]);
writeTestFileContinuously(filename:String)->begin
  local gen:=randomDataGenerator;
  local chunk:=[];
  local chunkSize:=1;
  chunk:=gen.head(chunkSize);
  while(chunk.size>0,begin
    local t0:=scriptTime;
    filename.appendFileLines(chunk).assert;
    note('Chunk of ',chunk.size,'kb written in ',scriptTime-t0);
    chunkSize*=2;
    chunk:=gen.head(chunkSize);
  end);
  true;
//  randomDataGenerator.each(line,filename.appendFileLines([line]).assert)  orElse true;

end;

begin
  local fname:=tempFileName;
  writeTestFile(fname);
  time({fileLines(fname).size              })        .print;
  time({fileContents(fname)                })['time'].print;
  time({fileLineIterator(fname).toList.size})        .print;
  deleteFile(fname);

  fname:=tempFileName;
  touchTestFile(fname);
  local writeFileFuture:= future(::writeTestFileContinuously,[fname]);
  while(!fileExists(fname));
  sleep(0.1);
  time({fileLineIterator(fname,1).toList.size}).print;
  writeFileFuture();
  deleteFile(fname);



end;



