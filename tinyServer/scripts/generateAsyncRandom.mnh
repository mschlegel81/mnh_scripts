CHUNK_SIZE:=64;
printSomethingRandom->


runScript(['name'=>'<temp>',
           'source'=>['main->[0..63].map({async({intRandom(256,256).map(::print) orElse 1})}).map({while(isVoid($x()))});'],
           'side effects'=>['alter package state','output','detaching','alter context state']].toMap)
 .map({$x[0]=='printline' ? softCast($x[2]) : void})
 .{([0..$L.size div CHUNK_SIZE-1]*CHUNK_SIZE).pEach(i,composeDigits($L[[i..i+CHUNK_SIZE-1]],256).print)};

main->printSomethingRandom;

main(timeOutInSeconds)->begin
  local timeOut:=timeOutInSeconds.toReal;
  while(time<timeOut,
    printSomethingRandom);
end;
