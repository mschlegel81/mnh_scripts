main->begin
  local lines:=exec('wmic',['process','get','Caption,ParentProcessId,ProcessId'])[0].trim.filter({$x<>''});
  local commonSpaces:=intersect@(lines.map({$x.matchComposite(' ').getInner(1)}));
  commonSpaces:=commonSpaces.minus(commonSpaces-1).sort.head(2);
  lines:=
  lines.tail.each(l,
    [l.copy(0,commonSpaces[0]-1),
     l.copy(commonSpaces[0],commonSpaces[1]-commonSpaces[0]),
     l.copy(commonSpaces[1])])
     .trim
     .softCast;
  local pidToName    :=lines.pMap({$x[[2,0]]}).toMap;
  local pidToParent  :=lines.pMap({$x[[2,1]]}).toMap;
  local pidToChildren:=pidToParent.toList.group(1).map({$x[0]=>$x[1].getInner(0)}).toMap;
  local printed:=[].toSet;
  local roots:=pidToParent.filter({$x[1]=$x[0]}).getInner(0).union(pidToParent.getInner(1).minus(pidToParent.getInner(0))).sort;
  local result:=[];
  local recurse:={begin
    result|=[[$indent&($last ? '\--' : '+--')&(pidToName[$pid] orElse '<?>'),$pid]];
    printed|=$pid;
    local newIndent:=$last
          ? $indent + '   '
          : $indent + '|  ';
    local children:=(pidToChildren[$pid] orElse []).sort.filter({!($c in printed)});
    children.each(child,recurse(newIndent,index+1=children.size,child));
  end};

  roots.each(r,recurse('',index+1=roots.size,r));
  printf("%s\t%s",'Process name'| result.getInner(0).copy(3),
                  'PID'    | result.getInner(1));
end;

