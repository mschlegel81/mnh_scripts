USE tinyServer_html,processUtil;

getProcessMap->begin
  local PM:=getTaskInfo.map({$x['PID'] => $x.mergeMaps(['children'=>[]].toMap,::orElse)}).toMap;
  PM.getInner(1).each(p,begin
    local parent:=p['parentPID'];
    PM[parent].isVoid
    ? void
    : PM[parent,'children']|=p['PID'];
  end);
  PM;
end;

private isProcessChildOfAnyOther(processMap:Map, PID:Int)->begin
  local pPID:=processMap[PID,'parentPID'];
  pPID != PID AND !isVoid(processMap[pPID]);
end;

killProcess(parameters:Map)->begin
  local PID:=parameters['index'];
  PID.isInt
  ? begin stopProcess(PID); sleep(1); end
  : void;
  redirectTo('/processes');
end;

niceBoxGlyphs(s:String)->
  s.replace('|','&#9474;')
   .replace('\--','&#9492;&#9472;&#9472;')
   .replace('+--','&#9500;&#9472;&#9472;');

@SuppressUnusedParameterWarning
processesPage(parameters:Map)->begin
  local PM:=getProcessMap;

  local ordered:=PM.getInner(0).sort;
  local roots:=ordered.filter({!isProcessChildOfAnyOther(PM,$PID)});
  local printed:=[].toSet;
  local result:=[];
  local recurse:={begin
    result|=[[$indent&($last ? '\--' : '+--')&(PM[$pid,'caption'] orElse '<?>'),$pid,PM[$pid,'commandLine'] orElse '']];
    printed|=$pid;
    local newIndent:=$last
          ? $indent + '   '
          : $indent + '|  ';
    local children:=(PM[$pid,'children'] orElse []).sort.filter({!($c in printed)});
    children.each(child,recurse(newIndent,index+1=children.size,child));
  end};

  roots.each(r,recurse('',index+1=roots.size,r));
  result:=[['Caption'.tag('b'),'PID'.tag('b'),'','Command Line'.tag('b')]]|
          result.map({[tag($x[0].copy(3).niceBoxGlyphs,'code'),
                       $x[1],
                       htmlLink(tag('kill','b'),encodeRequest('','processes/kill',['index'=>$x[1]].toMap)),
                       tag($x[2],'code')]});

  htmlPage('Processes',
    getHeadLinks&
    tag('Processes','h2')&
    htmlTable(result),
    false).wrapTextInHttp;
end;

@SuppressUnusedWarning
register:=begin
  headLinks|=htmlLink('Processes','processes');
  void;
end;


