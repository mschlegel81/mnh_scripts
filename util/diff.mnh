unifiedDiff(aName:String,bName:String,aLines:StringList,bLines:StringList,additionalLines>=0)->begin
  edit:=diff(aLines,bLines,true)['edit'].pEach(e,e[0]='+' ? [e[0],e[1]+1,e[2]+1,bLines[e[2]]]
                                                          : [e[0],e[1]+1,e[2]+1,aLines[e[1]]]);
  runs:=
  begin
    indexes:=edit.pEach(e,e[0]<>' ' ? [index-additionalLines..index+additionalLines] : void,|) //add additional lines to each run and concatenate all
                 .unique //remove duplicate lines and sort
                 .each(i,i>=edit.size or i<0 ? void : i);
    splits:=(indexes.tail<>indexes.leading+1);
    [indexes[true|splits],indexes[splits|true]].transpose;
  end;
  [#27'[91m--- '&aName&#27'[0m',#27'[92m+++ '&bName&#27'[0m']|
  runs.each(run,
      join(['@@ -',edit[run[0],1],',',edit[run[1],1]-edit[run[0],1]+1,
              ' +',edit[run[0],2],',',edit[run[1],2]-edit[run[0],2]+1,' @@']),
      edit[[run[0]..run[1]]].each(e,(e[0]='.' ? '  ' : e[0].replace(['+','-'],[#27'[92m+',#27'[91m-'])&' ')&e[3]&#27'[0m'),|);

end;

//*Shows the diff of two files
@demo_for=diff
main(file1:String,file2:String)->
  printf("%s",unifiedDiff(file1,
                          file2,
                          file1.fileLines,
                          file2.fileLines,
                          2));

//*Shows the diff of two files with customizable extra lines
main(file1:String,file2:String,extraLines)->
  printf("%s",unifiedDiff(file1,
                          file2,
                          file1.fileLines,
                          file2.fileLines,
                          toInt(extraLines)));
