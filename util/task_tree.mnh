
ellipse(s:String,maxLen)->
  s.length<maxLen
  ? s
  : s.copy(0,maxLen-3)+'...';

main-> begin
  tasks:=getTaskInfo;

  childMap:=group(tasks.getInner('PID'),tasks.getInner('parentPID')).map((g)->[g[0],g[1].minus([g[0]]).sort]).toMap;
  tasks:=tasks.map((t)->t['PID']=>t).toMap;



  placeholderTask:=(id)->
    ['PID'=>id,
     'caption'=>'',
     'commandLine'=>'',
     'parentPID'=>0,
     'userModeTime'=>0,
     'workingSetSize'=>0].toMap;


  lines:=[];
  appendRecurse:=(task,indent,last)->begin
    newLine:=format("%s%s%s: %s\t%s",indent,last ? '└──' : '├──',task['PID'],task['caption'].ellipse(30),task['workingSetSize']);
    newIndent:=indent+(last ? '   ' : '│  ');
    lines|=newLine;
    children:=childMap[task['PID']].orElse([]).toList;
    children.each(c,appendRecurse(tasks[c],newIndent,index+1=children.size));
  end;


  roots:=childMap.getInner(0).minus(childMap.getInner(1).flatten).toList;
  roots.each(rootTask,begin
    appendRecurse(tasks[rootTask] orElse placeholderTask(rootTask),'',index+1=roots.size);
  end);

  printf('%s',lines);
end;


